import nodemailer from 'nodemailer';

export default async function handler(req, res) {
  // Asegúrate de que solo se acepten solicitudes POST
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Método no permitido' });
  }

  // Configura el transportador de correo electrónico
  const transporter = nodemailer.createTransport({
    // Utiliza variables de entorno para la seguridad
    // Por ejemplo, para Gmail, puedes usar:
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER, // Tu dirección de correo electrónico
      pass: process.env.EMAIL_PASS  // La contraseña o contraseña de aplicación
    }
  });

  // Configura los detalles del correo electrónico
  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: 'tu_correo@ejemplo.com', // Cambia esto por el correo electrónico de destino
    subject: 'Nueva Compra en My Zone',
    html: `
      <h2>¡Felicidades! Se ha realizado una nueva compra.</h2>
      <p>Un usuario acaba de comprar un producto en tu tienda My Zone.</p>
      <p>¡Revisa los detalles y prepárate para enviar el acceso!</p>
    `
  };

  try {
    // Envía el correo electrónico
    await transporter.sendMail(mailOptions);
    // Devuelve una respuesta exitosa
    res.status(200).json({ message: 'Correo enviado con éxito' });
  } catch (error) {
    // Maneja errores y devuelve una respuesta de error
    console.error('Error al enviar el correo:', error);
    res.status(500).json({ message: 'Error al enviar el correo' });
  }
}

